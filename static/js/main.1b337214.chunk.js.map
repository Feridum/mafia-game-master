{"version":3,"sources":["store/game/game.types.ts","store/player/player.types.ts","store/player/player.model.ts","routing/routes.ts","store/game/game.model.ts","store/store.ts","shared/BaseLayout/BaseLayout.styles.ts","shared/BaseLayout/BaseLayout.tsx","views/Menu/Menu.styles.ts","views/Menu/Menu.tsx","views/Players/Players.styles.ts","views/Players/Player/player.styles.ts","views/Players/Player/Player.tsx","views/Players/Players.tsx","views/Players/PlayerForm/PlayerForm.styles.ts","views/Players/PlayerForm/PlayerForm.tsx","views/Players/AddPlayer/AddPlayer.tsx","views/Assign/Player/player.styles.ts","views/Assign/Player/Player.tsx","views/Assign/Assign.styles.ts","views/Assign/Assign.tsx","views/Assign/Fraction/Fraction.styles.ts","views/Assign/Fraction/Role/Role.styles.ts","views/Assign/Fraction/Role/Role.tsx","views/Assign/Fraction/Fraction.tsx","views/Game/Game/Game.styles.ts","views/Game/Game/Player/player.styles.ts","views/Game/Game/Player/Player.tsx","views/Game/Game/Actions/Actions.styles.ts","views/Game/Game/Actions/PlayersDialog/PlayersDialog.styles.ts","views/Game/Game/Actions/PlayersDialog/PlayersDialog.tsx","views/Game/Game/Actions/Action/Action.styles.ts","views/Game/Game/Actions/Action/Action.tsx","views/Game/Game/Actions/Actions.tsx","views/Game/Game/Game.tsx","views/Game/GameMenu/GameMenu.styles.ts","views/Game/GameMenu/GameMenu.tsx","views/Players/EditPlayer/EditPlayer.tsx","routing/Routing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GamePeriodsType","DayActions","FirstNightActions","NightActions","ModifiersTypes","Fractions","TownRoles","MafiaRoles","SyndicateRoles","playerModel","items","addPlayer","action","state","payload","push","id","uuid","active","name","fraction","role","assignToRole","map","player","playerId","Object","objectSpread","editPlayer","changePlayerStatus","Routes","mapNewModifiers","modifier","spyInfo","_modifiers","defineProperty","POISON","modifiers","poison","death","BLACKMAIL","blackmail","DEATH_ANGEL","deathAngel","DEVIL","DOCTOR","SPY","spy","concat","toConsumableArray","CRAZY","QUICK","DEATH","storeModel","game","exisitingGame","periodNumber","config","firstNight","actions","type","MAFIA_MEET","message","PROSTITUTE_MEET","day","KILL","MEET","night","MAFIA_KILL","SPY2","players","log","period","computed","DAY","NIGHT","roles","filter","fractions","uniq","applyModifier","includes","NONE","SYNDICATE","startGame","nextPeriod","previousPeriod","persistConfig","key","storage","store","createStore","reducerEnhancer","reducer","persistReducer","persistor","persistStore","useStoreActions","useStoreState","useStoreDispatch","useStyles","makeStyles","theme","container","minHeight","display","flexDirection","childContainer","flexGrow","BaseLayout","_ref","children","_ref$displayAppBar","displayAppBar","classes","router","useContext","__RouterContext","react_default","a","createElement","className","AppBar","position","color","ChevronLeft","onClick","history","goBack","style","fontSize","useMenuStyles","button","width","height","marginBottom","spacing","justifyContent","Menu","BaseLayout_BaseLayout","Button","variant","root","PLAYERS","ASSIGN_PLAYERS","GAME_MENU","usePlayersStyles","overflowY","&::-webkit-scrollbar","addContainer","padding","legend","usePlayerStyles","alignItems","Player","changeStatus","Box","Switch","checked","onChange","Players","Typography","component","Player_Player","Fab","aria-label","ADD_PLAYER","Add","usePlayerFormStyles","marginTop","buttonContainer","PlayerForm","handleSubmit","initialValue","react_final_form_es","onSubmit","initialValues","render","_ref2","submitting","noValidate","fullWidth","required","TextField","label","validate","value","length","undefined","Grid","item","disabled","AddPlayer","PlayerForm_PlayerForm","values","useAssignStyles","Assign","Player_Player_Player","useFractionStyles","minWidth","useRoleStyles","Role","addRole","match","params","Fraction","useTheme","_useState","useState","_useState2","slicedToArray","setValue","Tabs","event","newValue","indicatorColor","textColor","Tab","icon","LocationCity","Brightness3","Phone","lib_default","axis","direction","index","onChangeIndex","dir","Role_Role","TOWN","MAFIA","useGameStyles","scrollableContainer","info","infoElem","react","useActionStyles","usePlayersDialogStyles","mapFractionsToInfo","_mapFractionsToInfo","PlayersDialog","open","onClose","isSpy","selectedPlayersIds","setSelectedPlayers","_useState3","_useState4","setSpyInfo","handleSave","handleSpySave","Dialog","fullScreen","DialogContent","ButtonGroup","handleClick","DialogActions","Action","_mapActionsToModifer","done","setDoneStatus","playerAction","setPlayerAction","_useState5","_useState6","isPlayersDialogOpen","setPlayerDialog","mapActionsToModifer","spyActions","PlayersDialog_PlayersDialog","Actions","firstNightActions","dayActions","nightActions","PROSTITUTE","BLACKMAILER","Action_Action","Game","Notes","ViewList","Person","slideClassName","containerStyle","Actions_Actions","Game_Player_Player_Player","useGameMenuStyles","GameMenu","startNewGame","existingGame","GAME","EditPlayer","Routing","react_router_dom","react_router","exact","path","MAIN_MENU","App","integration_react","loading","easy_peasy_esm","Container","maxWidth","CssBaseline","Routing_Routing","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2IAGYA,EAKAC,EAOAC,EAMAC,EAqBAC,ECxCAC,EAMAC,EASAC,EAMAC,6ECnBCC,EAA2B,CACpCC,MAAO,GACPC,UAAWC,YAAO,SAACC,EAAOC,GACtBD,EAAMH,MAAMK,KAAK,CACbC,GAAIC,MACJC,QAAQ,EACRC,KAAML,EACNM,SAAU,KACVC,KAAM,SAGdC,aAAcV,YAAO,SAACC,EAAOC,GACzBD,EAAMH,MAAQG,EAAMH,MAAMa,IAAY,SAAAC,GAClC,OAAIA,EAAOR,KAAOF,EAAQW,SACfC,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIJ,SAAUN,EAAQM,SAClBC,KAAMP,EAAQO,OAIlBG,EAAOH,OAASP,EAAQO,KACjBK,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIJ,SAAU,KACVC,KAAM,OAGPG,MAGfI,WAAYhB,YAAO,SAACC,EAAOC,GACvBD,EAAMH,MAAQG,EAAMH,MAAMa,IAAI,SAAAC,GAC1B,OAAIA,EAAOR,KAAOF,EAAQE,GACfU,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIL,KAAML,EAAQK,OAIfK,MAGfK,mBAAoBjB,YAAO,SAACC,EAAOC,GAC/BD,EAAMH,MAAQG,EAAMH,MAAMa,IAAI,SAAAC,GAC1B,OAAIA,EAAOR,KAAOF,EACPY,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIN,QAASM,EAAON,SAIjBM,0DFrDPxB,oDAKAC,oFAOAC,8GAMAC,4JAqBAC,4LCxCAC,6EAMAC,gJASAC,4FAMAC,iKEvBAsB,UCcNC,EAAkB,SACpBP,EACAQ,EACAC,GACY,IAAAC,EA4CZ,OA3CuDA,EAAA,GAAAR,OAAAS,EAAA,EAAAT,CAAAQ,EAClD9B,EAAegC,OADmCV,OAAAC,EAAA,EAAAD,CAAA,GAE5CF,EAAOa,UAFqC,CAG/CC,OAAQd,EAAOa,UAAUC,OAAS,EAClCC,QAAOf,EAAOa,UAAUC,UAJuBZ,OAAAS,EAAA,EAAAT,CAAAQ,EAMlD9B,EAAeoC,UANmCd,OAAAC,EAAA,EAAAD,CAAA,GAO5CF,EAAOa,UAPqC,CAQ/CI,WAAW,KARoCf,OAAAS,EAAA,EAAAT,CAAAQ,EAUlD9B,EAAesC,YAVmChB,OAAAC,EAAA,EAAAD,CAAA,GAW5CF,EAAOa,UAXqC,CAY/CM,WAAYnB,EAAOa,UAAUM,WAAa,EAC1CJ,QAAOf,EAAOa,UAAUM,cAbuBjB,OAAAS,EAAA,EAAAT,CAAAQ,EAelD9B,EAAewC,MAfmClB,OAAAC,EAAA,EAAAD,CAAA,GAgB5CF,EAAOa,YAhBqCX,OAAAS,EAAA,EAAAT,CAAAQ,EAkBlD9B,EAAeyC,OAlBmCnB,OAAAC,EAAA,EAAAD,CAAA,GAmB5CF,EAAOa,UAnBqC,CAoB/CC,OAAQ,EACRC,OAAO,KArBwCb,OAAAS,EAAA,EAAAT,CAAAQ,EAuBlD9B,EAAe0C,IAvBmCpB,OAAAC,EAAA,EAAAD,CAAA,GAwB5CF,EAAOa,UAxBqC,CAyB/CU,IAAKd,EAAO,GAAAe,OAAAtB,OAAAuB,EAAA,EAAAvB,CACFF,EAAOa,UAAUU,KADf,CACoBd,IAC1BT,EAAOa,UAAUU,OA3BwBrB,OAAAS,EAAA,EAAAT,CAAAQ,EA6BlD9B,EAAe8C,MA7BmCxB,OAAAC,EAAA,EAAAD,CAAA,GA8B5CF,EAAOa,UA9BqC,CA+B/CE,OAAO,KA/BwCb,OAAAS,EAAA,EAAAT,CAAAQ,EAiClD9B,EAAe+C,MAjCmCzB,OAAAC,EAAA,EAAAD,CAAA,GAkC5CF,EAAOa,UAlCqC,CAmC/CE,OAAO,KAnCwCb,OAAAS,EAAA,EAAAT,CAAAQ,EAqClD9B,EAAegD,MArCmC1B,OAAAC,EAAA,EAAAD,CAAA,GAsC5CF,EAAOa,UAtCqC,CAuC/CE,OAAO,KAvCwCL,GA2CtCF,ICvDfqB,EAAyB,CAC3B7B,OAAQf,EACR6C,KDwDgC,CAChCC,eAAe,EACfC,aAAc,EACdC,OAAQ,CACJC,WAAY,CACRC,QAAS,CACL,CACIC,KAAM1D,EAAkB2D,WACxBC,QAAS,yBACTlD,QAAQ,GAEZ,CACIgD,KAAM1D,EAAkBsC,UACxBsB,QAAS,uCACTlD,QAAQ,GAEZ,CACIgD,KAAM1D,EAAkB6D,gBACxBD,QAAS,2DACTlD,QAAQ,KAIpBoD,IAAK,CACDL,QAAS,CACL,CACIC,KAAM3D,EAAWgE,KACjBH,QAAS,qCACTlD,QAAQ,GAEZ,CACIgD,KAAM3D,EAAWiE,KACjBJ,QAAS,0CACTlD,QAAQ,GAEZ,CACIgD,KAAM3D,EAAWiD,MACjBY,QAAS,uCACTlD,QAAQ,GAEZ,CACIgD,KAAM3D,EAAWkD,MACjBW,QAAS,+CACTlD,QAAQ,KAIpBuD,MAAO,CACHR,QAAS,CACL,CACIC,KAAMzD,EAAaiE,WACnBN,QAAS,eACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAaiC,OACnB0B,QAAS,6BACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAauC,YACnBoB,QAAS,mCACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAa0C,OACnBiB,QAAS,eACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAayC,MACnBkB,QAAS,4CACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAa2C,IACnBgB,QAAS,kDACTlD,QAAQ,GAEZ,CACIgD,KAAMzD,EAAakE,KACnBP,QAAS,oDACTlD,QAAQ,MAKxB0D,QAAS,GACTC,IAAK,GACLC,OAAQC,YAAS,SAAA5D,GAAK,OACfA,EAAM2C,aAAe,EAAKxD,EAAgB0E,IAAM1E,EAAgB2E,QAEvEC,MAAOH,YAAS,SAAA5D,GAAK,OACjBA,EAAMyD,QACDO,OAAO,SAAArD,GAAM,OAAKA,EAAOa,UAAUE,QACnChB,IAAI,SAAAC,GAAM,OAAIA,EAAOH,SAE9ByD,UAAWL,YAAS,SAAA5D,GAAK,OACrBkE,eACIlE,EAAMyD,QACDO,OAAO,SAAArD,GAAM,OAAKA,EAAOa,UAAUE,QACnChB,IAAI,SAAAC,GAAM,OAAIA,EAAOJ,cAGlC4D,cAAepE,YAAO,SAACC,EAAOC,GAC1BD,EAAMyD,QAAUzD,EAAMyD,QAAQ/C,IAAgB,SAAAC,GAC1C,OAAIV,EAAQwD,QAAQW,SAASzD,EAAOC,UACzBC,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIH,KACIP,EAAQkB,WAAa5B,EAAewC,OACpCpB,EAAOa,UAAUE,MACX/B,EAAe0E,KACf1D,EAAOH,KACjBD,SACIN,EAAQkB,WAAa5B,EAAewC,OACpCpB,EAAOa,UAAUE,MACXlC,EAAU8E,UACV3D,EAAOJ,SACjBiB,UAAWN,EACPP,EACAV,EAAQkB,SACRlB,EAAQmB,WAMhBnB,EAAQkB,WAAa5B,EAAe8C,OACpC1B,EAAOH,OAASf,EAAU4C,MAEnBxB,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIH,KAAMf,EAAU4E,OAIpBpE,EAAQkB,WAAa5B,EAAe+C,OACpC3B,EAAOH,OAASf,EAAU6C,MAEnBzB,OAAAC,EAAA,EAAAD,CAAA,GACAF,EADP,CAEIH,KAAMf,EAAU4E,OAGjB1D,MAGf4D,UAAWxE,YAAO,SAACC,EAAOC,GACtBD,EAAM0C,eAAgB,EACtB1C,EAAM2C,aAAe,EACrB3C,EAAMyD,QAAUxD,EAAQwD,QAAQ/C,IAAgB,SAAAC,GAC5C,MAAO,CACHC,SAAUD,EAAOR,GACjBG,KAAMK,EAAOL,KACbE,KAAMG,EAAOH,KACbD,SAAUI,EAAOJ,SACjBiB,UAAW,CACPC,OAAQ,EACRC,OAAO,EACPE,WAAW,EACXE,WAAY,EACZI,IAAK,SAKrBsC,WAAYzE,YAAO,SAAAC,GACfA,EAAM2C,aAAe3C,EAAM2C,aAAe,IAE9C8B,eAAgB1E,YAAO,SAAAC,GACnBA,EAAM2C,aAAe3C,EAAM2C,aAAe,MChO5C+B,EAAgB,CAClBC,IAAK,OACLC,aAGSC,EAAQC,YAAYtC,EAAY,CACzCuC,gBAAiB,SAACC,GACd,OAAOC,YAAeP,EAAeM,MAIhCE,EAAYC,YAAaN,GACzBO,EAAkBP,EAAMO,gBAExBC,GADmBR,EAAMS,iBACTT,EAAMQ,yCCxBtBE,EAAYC,YAAW,SAAAC,GAAK,MAAK,CAC1CC,UAAW,CACPC,UAAW,QACXC,QAAS,OACTC,cAAe,UAGnBC,eAAgB,CACZF,QAAS,OACTC,cAAe,SACfE,SAAU,wBCLLC,EAAkC,SAAAC,GAGzC,IAFFC,EAEED,EAFFC,SAEEC,EAAAF,EADFG,qBACE,IAAAD,KACIE,EAAUd,IACVe,EAASC,qBAAWC,KAE1B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQX,WACnBU,GACGK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC5BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,QAAS,kBAAMX,EAAOY,QAAQC,UAC9BC,MAAO,CAAEC,SAAU,aAI/BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQP,gBAAiBI,cCtBxCoB,EAAgB9B,YAAW,SAAAC,GAAK,MAAK,CAC9C8B,OAAQ,CACJC,MAAO,OACPC,OAAQ,IACRC,aAAcjC,EAAMkC,QAAQ,IAEhCjC,UAAW,CACPkC,eAAgB,SAChBhC,QAAS,OACTC,cAAe,SACfE,SAAU,gBLZN9E,+JMOL,MAAM4G,EAAW,WACpB,IAAMxB,EAAUiB,IACVhB,EAASC,qBAAWC,KAE1B,OACIC,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQX,WACpBe,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,WACRjB,MAAM,UACNV,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBN,QAAS,kBAAMX,EAAOY,QAAQhH,KAAKe,EAAOiH,WAJ9C,UAQAzB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,WACRjB,MAAM,UACNV,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBN,QAAS,kBAAMX,EAAOY,QAAQhH,KAAKe,EAAOkH,kBAJ9C,iBAQA1B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,WACRjB,MAAM,UACNV,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBN,QAAS,kBAAMX,EAAOY,QAAQhH,KAAKe,EAAOmH,aAJ9C,6CC5BHC,EAAmB7C,YAAW,SAAAC,GAAK,MAAK,CACjDC,UAAW,CACPE,QAAS,OACTC,cAAe,SACf4B,OAAQ,EACRa,UAAW,SACXvC,SAAU,EACVwC,uBAAwB,CACpBf,MAAO,iBAGfgB,aAAc,CACVC,QAAShD,EAAMkC,QAAQ,GACvB/B,QAAS,OACTgC,eAAgB,YAEpBc,OAAQ,CACJD,QAAShD,EAAMkC,QAAQ,GACvB/B,QAAS,OACTgC,eAAgB,oBCnBXe,EAAkBnD,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACP+C,QAAShD,EAAMkC,QAAQ,GACvB/B,QAAS,OACTgD,WAAY,UAEhBrB,OAAQ,CACJ3B,QAAS,OACTG,SAAU,EACV0C,QAAShD,EAAMkC,QAAQ,yBCJlBkB,GAA0B,SAAA5C,GAAgB,IAAbtF,EAAasF,EAAbtF,OAChC0F,EAAUsC,IACVrC,EAASC,qBAAWC,KACpBsC,EAAe1D,EACjB,SAAAtC,GAAO,OAAIA,EAAQnC,OAAOK,qBAG9B,OACIyF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKnC,UAAWP,EAAQX,WACpBe,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI1B,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBS,QAAQ,WACRf,QAAS,kBAAMX,EAAOY,QAAQhH,KAAf,YAAAiC,OAAgCxB,EAAOR,OAErDQ,EAAOL,MAEZmG,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACIC,QAAStI,EAAON,OAChB6I,SAAU,kBAAMJ,EAAanI,EAAOR,SCdvCgJ,GAA4B,WACrC,IAAM1F,EAAU4B,EAAc,SAAAR,GAAK,OAAIA,EAAMlE,OAAOd,QAC9CwG,EAAUgC,IACV/B,EAASC,qBAAWC,KAE1B,OACIC,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQqC,QACpBjC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAAnC,eAGA5C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAAnC,aAIJ5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQX,WACnBjC,EAAQ/C,IAAI,SAAAC,GAAM,OACf8F,EAAAC,EAAAC,cAAC2C,GAAD,CAAQ3I,OAAQA,OAGxB8F,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQmC,cACpB/B,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIxC,MAAM,YACNyC,aAAW,MACXvC,QAAS,kBAAMX,EAAOY,QAAQhH,KAAKe,EAAOwI,cAE1ChD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,uCCnCPC,GAAsBnE,YAAW,SAAAC,GAAK,MAAK,CACpDC,UAAW,CACPkE,UAAWnE,EAAMkC,QAAQ,IAE7BkC,gBAAiB,CACbjE,QAAS,OACTgC,eAAgB,eCDXkC,GAAkC,SAAA7D,GAGzC,IAFF8D,EAEE9D,EAFF8D,aACAC,EACE/D,EADF+D,aAEM3D,EAAUsD,KAChB,OACIlD,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CACIC,SAAUH,EACVI,cAAe,CAAE7J,KAAM0J,GACvBI,OAAQ,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,aAAcO,EAAjBD,EAAiBC,WAAjB,OACJ7D,EAAAC,EAAAC,cAAA,QACIuD,SAAUH,EACVQ,YAAU,EACV3D,UAAWP,EAAQX,WAEnBe,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CACIO,WAAS,EACTC,UAAQ,EACRnK,KAAK,OACL+I,UAAWqB,aACX3H,KAAK,OACL4H,MAAM,cACNC,SAAU,SAAAC,GAAK,OACXA,EAAMC,OAAS,OAAIC,EAAY,mBAIvCtE,EAAAC,EAAAC,cAACqE,GAAA,EAAD,CACIC,MAAI,EACJ7D,MAAO,CAAEwC,UAAW,IACpBhD,UAAWP,EAAQwD,iBAEnBpD,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRjB,MAAM,UACNhE,KAAK,SACLmI,SAAUZ,GAEQ,KAAjBN,EAAsB,SAAW,eCvCjDmB,GAAgB,WACzB,IAAM7E,EAASC,qBAAWC,KACpB1G,EAAYsF,EAAgB,SAAAtC,GAAO,OAAIA,EAAQnC,OAAOb,YAM5D,OACI2G,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAACyE,GAAD,CAAYpB,aAAa,GAAGD,aANf,SAACsB,GAClBvL,EAAUuL,EAAO/K,MACjBgG,EAAOY,QAAQC,cCVVwB,GAAkBnD,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACP+C,QAAShD,EAAMkC,QAAQ,GACvB/B,QAAS,OACTgC,eAAgB,oBCAXiB,GAA0B,SAAA5C,GAAgB,IAAbtF,EAAasF,EAAbtF,OAChC0F,EAAUsC,KACVrC,EAASC,qBAAWC,KAE1B,OACIC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI1B,QAAS,CAAE4B,KAAM5B,EAAQX,WACzBuB,QAAS,kBACLX,EAAOY,QAAQhH,KAAf,sBAAAiC,OAA0CxB,EAAOR,MAErD6H,QAAQ,WACRwC,WAAS,GAET/D,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAC9B1I,EAAOL,MAEXK,EAAOH,MACJiG,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAAnC,IACM1I,EAAOH,KADb,OCrBH8K,GAAkB9F,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACPkE,UAAWnE,EAAMkC,QAAQ,OCEpB4D,GAAa,WACtB,IAAM9H,EAAU4B,EAAc,SAAAR,GAAK,OAAIA,EAAMlE,OAAOd,QAAOmE,OACvD,SAAArD,GAAM,OAAIA,EAAON,SAEfgG,EAAUiF,KAEhB,OACI7E,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQX,WACnBjC,EAAQ/C,IAAI,SAAAC,GAAM,OACf8F,EAAAC,EAAAC,cAAC6E,GAAD,CAAQ7K,OAAQA,iGCdvB8K,GAAoBjG,YAAW,SAAAC,GAAK,MAAK,CAClD+E,UAAW,CACPkB,SAAU,YCFLC,GAAgBnG,YAAW,SAAAC,GAAK,MAAK,CAC9CC,UAAW,CACP+C,QAAShD,EAAMkC,QAAQ,OCGlBiE,GAAsB,SAAA3F,GAAwB,IAArBzF,EAAqByF,EAArBzF,KAAMD,EAAe0F,EAAf1F,SAClC8F,EAAUsF,KACVrF,EAASC,qBAAWC,KAEpBqF,EAAUzG,EAAgB,SAAAtC,GAAO,OAAIA,EAAQnC,OAAOF,eAEpDN,EAAMmG,EAAOwF,MAAMC,OAA0B5L,GAanD,OACIsG,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI1B,QAAS,CAAE4B,KAAM5B,EAAQX,WACzBuB,QAdY,WAChB9G,GACI0L,EAAQ,CACJrL,KAAMA,EACNI,SAAUT,EACVI,SAAUA,IAGlB+F,EAAOY,QAAQC,UAOXa,QAAQ,WACRwC,WAAS,GAET/D,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAC9B7I,KCpBJwL,GAAe,WACxB,IAAM3F,EAAUoF,KACVhG,EAAQwG,eAFgBC,EAGJC,mBAAS,GAHLC,EAAAvL,OAAAwL,GAAA,EAAAxL,CAAAqL,EAAA,GAGvBrB,EAHuBuB,EAAA,GAGhBE,EAHgBF,EAAA,GAa9B,OACI3F,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC5BN,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACI1B,MAAOA,EACP3B,SAbhB,SAAsBsD,EAAYC,GAC9BH,EAASG,IAaGC,eAAe,UACfC,UAAU,UACV3E,QAAQ,aAERvB,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAACmG,GAAA,EAAD,MACNzG,QAAS,CAAEmE,UAAWnE,EAAQmE,aAElC/D,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAACoG,GAAA,EAAD,MACN1G,QAAS,CAAEmE,UAAWnE,EAAQmE,aAElC/D,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAACqG,GAAA,EAAD,MACN3G,QAAS,CAAEmE,UAAWnE,EAAQmE,eAI1C/D,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CACIwG,KAA0B,QAApBzH,EAAM0H,UAAsB,YAAc,IAChDC,MAAOvC,EACPwC,cA/BZ,SAA2BD,GACvBd,EAASc,KAgCD3G,EAAAC,EAAAC,cAAA,OAAK2G,IAAK7H,EAAM0H,WACXtM,OAAOwK,OAAO5L,GAAWiB,IAAI,SAACF,GAAD,OAC1BiG,EAAAC,EAAAC,cAAC4G,GAAD,CAAM/M,KAAMA,EAAMD,SAAUf,EAAUgO,UAG9C/G,EAAAC,EAAAC,cAAA,OAAK2G,IAAK7H,EAAM0H,WACXtM,OAAOwK,OAAO3L,GAAYgB,IAAI,SAACF,GAAD,OAC3BiG,EAAAC,EAAAC,cAAC4G,GAAD,CAAM/M,KAAMA,EAAMD,SAAUf,EAAUiO,WAG9ChH,EAAAC,EAAAC,cAAA,OAAK2G,IAAK7H,EAAM0H,WACXtM,OAAOwK,OAAO1L,GAAgBe,IAAI,SAACF,GAAD,OAC/BiG,EAAAC,EAAAC,cAAC4G,GAAD,CAAM/M,KAAMA,EAAMD,SAAUf,EAAU8E,gDClEjDoJ,GAAgBlI,YAAW,SAAAC,GAAK,MAAK,CAC9C+E,UAAW,CACPkB,SAAU,SAEd3F,SAAU,CACNH,QAAS,OACTC,cAAe,SACfE,SAAU,GAEd4H,oBAAqB,CACjB/H,QAAS,OACTC,cAAe,SACf4B,OAAQ,EACRa,UAAW,SACXvC,SAAU,EACVwC,uBAAwB,CACpBf,MAAO,oBChBNmB,GAAkBnD,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACP+C,QAAShD,EAAMkC,QAAQ,GACvB/B,QAAS,OACTgC,eAAgB,iBAEpBgG,KAAM,CACFhI,QAAS,QAEbiI,SAAU,CACNpF,QAAShD,EAAMkC,QAAQ,OCPlBkB,GAA0B,SAAA5C,GAAgB,IAAbtF,EAAasF,EAAbtF,OAChC0F,EAAUsC,KACVnH,EAAYb,EAAOa,UACzB,OACIiF,EAAAC,EAAAC,cAACmH,EAAA,SAAD,KACIrH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI1B,QAAS,CAAE4B,KAAM5B,EAAQX,WACzBwF,SAAUvK,EAAOa,UAAUE,OAE3B+E,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAC9B1I,EAAOL,MAEZmG,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAAnC,IACM1I,EAAOH,KADb,MAIJiG,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQuH,MACpBnH,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIpB,QAAQ,KACRqB,UAAU,KACVzC,UAAWP,EAAQwH,UAHvB,MAKQrM,EAAUC,QAElBgF,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIpB,QAAQ,KACRqB,UAAU,KACVzC,UAAWP,EAAQwH,UAHvB,MAKQrM,EAAUM,YAEjBN,EAAUI,WACP6E,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIpB,QAAQ,KACRqB,UAAU,KACVzC,UAAWP,EAAQwH,UAHvB,kCCnCPE,GAAkBvI,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACPE,QAAS,OACTC,cAAe,SACfE,SAAU,GAEdwB,OAAQ,CACJkB,QAAShD,EAAMkC,QAAQ,qCCPlBqG,GAAyBxI,YAAW,SAAAC,GAAK,MAAK,CACvD8B,OAAQ,CACJkB,QAAShD,EAAMkC,QAAQ,OCWzBsG,IAA+CC,EAAA,GAAArN,OAAAS,EAAA,EAAAT,CAAAqN,EAChD1O,EAAUiO,MAAQ,eAD8B5M,OAAAS,EAAA,EAAAT,CAAAqN,EAEhD1O,EAAU8E,UAAY,iBAF0BzD,OAAAS,EAAA,EAAAT,CAAAqN,EAGhD1O,EAAUgO,KAAO,gBAH+BU,GAMxCC,GAAwC,SAAAlI,GAK/C,IAJFmI,EAIEnI,EAJFmI,KACAC,EAGEpI,EAHFoI,QACApH,EAEEhB,EAFFgB,QACAqH,EACErI,EADFqI,MACEpC,EAC+CC,mBAAmB,IADlEC,EAAAvL,OAAAwL,GAAA,EAAAxL,CAAAqL,EAAA,GACKqC,EADLnC,EAAA,GACyBoC,EADzBpC,EAAA,GAAAqC,EAE4BtC,mBAA4B,MAFxDuC,EAAA7N,OAAAwL,GAAA,EAAAxL,CAAA4N,EAAA,GAEKrN,EAFLsN,EAAA,GAEcC,EAFdD,EAAA,GAGIjL,EAAU4B,EAAc,SAAAR,GAAK,OAAIA,EAAMpC,KAAKgB,UAC5C4C,EAAU2H,KAkBVY,EAAa,WACf3H,EAAQsH,EAAoB,IAC5BF,KAGEQ,EAAgB,SAACjO,EAAkBsB,GACrC+E,EAAQ,CAACrG,GAAWsB,GACpBmM,KAGJ,OACI5H,EAAAC,EAAAC,cAACmI,GAAA,EAAD,CAAQC,YAAU,EAACX,KAAMA,EAAMC,QAASA,GACpC5H,EAAAC,EAAAC,cAACqI,GAAA,EAAD,KACQ5N,EAiBAqF,EAAAC,EAAAC,cAACmH,EAAA,SAAD,KACIrH,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAC9BjI,EAASd,KADd,IACqBc,EAASb,UAEK,IAAlCa,EAASI,UAAUU,IAAI4I,QACpBrE,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAAnC,4DAKHjI,EAASI,UAAUU,IAAIxB,IAAI,SAAAwB,GAAG,OAC3BuE,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,UAAU,MAC9B4E,GAAmB/L,MAG5BuE,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAazE,WAAS,GACjB3J,OAAOwK,OAAO7L,GACVwE,OACG,SAAAzD,GAAQ,OAAIA,IAAaa,EAASb,WAErCG,IAAI,SAAAH,GAAQ,OACTkG,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACId,QAAS,kBACL4H,EACIzN,EAASR,SACTL,KAIP0N,GAAmB1N,QA7CxCkD,EAAQ/C,IAAI,SAAAC,GAAM,OACd8F,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIyC,WAAS,EACTxC,QACIuG,EAAmBnK,SAASzD,EAAOC,UAC7B,YACA,WAEVqG,QAAS,kBAtCb,SAACtG,GACb2N,EACAK,EAAWhO,GAEP4N,EAAmBnK,SAASzD,EAAOC,UACnC4N,EACID,EAAmBvK,OACf,SAAApD,GAAQ,OAAIA,IAAaD,EAAOC,YAIxC4N,EAAkB,GAAArM,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAK0N,GAAL,CAAyB5N,EAAOC,YA2BvBsO,CAAYvO,IAC3BgE,IAAKhE,EAAOC,SACZgG,UAAWP,EAAQkB,QAElB5G,EAAOL,SAwCxBmG,EAAAC,EAAAC,cAACwI,GAAA,EAAD,KACI1I,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACId,QAAW7F,EAAU,kBAAMuN,EAAW,OAAQN,EAC9CtH,MAAM,UACNH,UAAWP,EAAQkB,QAHvB,WAOE+G,GACE7H,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACId,QAAS,kBAAM2H,KACf7H,MAAM,UACNmE,SAAwC,IAA9BqD,EAAmBzD,OAC7BlE,UAAWP,EAAQkB,QAJvB,uCCzHPwG,GAAkBvI,YAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACP+C,QAAShD,EAAMkC,QAAQ,OCSlByH,GAA0B,SAAAnJ,GAAgB,IAAAoJ,EAAbtP,EAAakG,EAAblG,OAAamM,EACrBC,oBAAS,GADYC,EAAAvL,OAAAwL,GAAA,EAAAxL,CAAAqL,EAAA,GAC5CoD,EAD4ClD,EAAA,GACtCmD,EADsCnD,EAAA,GAAAqC,EAEXtC,mBAGrC,CAAEpM,OAAQ,aAAUuO,OAAO,IALqBI,EAAA7N,OAAAwL,GAAA,EAAAxL,CAAA4N,EAAA,GAE5Ce,EAF4Cd,EAAA,GAE9Be,EAF8Bf,EAAA,GAAAgB,EAMJvD,oBAAS,GANLwD,EAAA9O,OAAAwL,GAAA,EAAAxL,CAAA6O,EAAA,GAM5CE,EAN4CD,EAAA,GAMvBE,EANuBF,EAAA,GAO7CxL,EAAgBiB,EAAgB,SAAAtC,GAAO,OAAIA,EAAQL,KAAK0B,gBACxDkC,EAAU0H,KAEV+B,GAELT,EAAA,GAAAxO,OAAAS,EAAA,EAAAT,CAAAwO,EACIjQ,EAAWgE,KAAO,SAACK,GAAD,OACfU,EAAc,CAAEV,UAAStC,SAAU5B,EAAegD,UAFzD1B,OAAAS,EAAA,EAAAT,CAAAwO,EAGIjQ,EAAWiE,KAAO,SAACI,EAAmBrC,GAApB,OACf+C,EAAc,CAAEV,UAAStC,SAAU5B,EAAe0C,IAAKb,cAJ9DP,OAAAS,EAAA,EAAAT,CAAAwO,EAKIjQ,EAAWiD,MAAQ,SAACoB,GAAD,OAChBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAe8C,UANzDxB,OAAAS,EAAA,EAAAT,CAAAwO,EAOIjQ,EAAWkD,MAAQ,SAACmB,GAAD,OAChBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAe+C,UARzDzB,OAAAS,EAAA,EAAAT,CAAAwO,EASI/P,EAAaiE,WAAa,SAACE,GAAD,OACvBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAegD,UAVzD1B,OAAAS,EAAA,EAAAT,CAAAwO,EAWI/P,EAAauC,YAAc,SAAC4B,GAAD,OACxBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAesC,gBAZzDhB,OAAAS,EAAA,EAAAT,CAAAwO,EAaI/P,EAAayC,MAAQ,SAAC0B,GAAD,OAClBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAewC,UAdzDlB,OAAAS,EAAA,EAAAT,CAAAwO,EAeI/P,EAAa0C,OAAS,SAACyB,GAAD,OACnBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAeyC,WAhBzDnB,OAAAS,EAAA,EAAAT,CAAAwO,EAiBI/P,EAAaiC,OAAS,SAACkC,GAAD,OACnBU,EAAc,CAAEV,UAAStC,SAAU5B,EAAegC,WAlBzDV,OAAAS,EAAA,EAAAT,CAAAwO,EAmBI/P,EAAa2C,IAAM,SAACwB,EAAmBrC,GAApB,OAChB+C,EAAc,CAAEV,UAAStC,SAAU5B,EAAe0C,IAAKb,cApB9DP,OAAAS,EAAA,EAAAT,CAAAwO,EAqBI/P,EAAakE,KAAO,SAACC,EAAmBrC,GAApB,OACjB+C,EAAc,CAAEV,UAAStC,SAAU5B,EAAe0C,IAAKb,cAtB9DP,OAAAS,EAAA,EAAAT,CAAAwO,EAuBIhQ,EAAkBsC,UAAY,SAAC8B,GAAD,OAC3BU,EAAc,CAAEV,UAAStC,SAAU5B,EAAeoC,cAxBzD0N,GA2BKU,EAAuB,CACzBzQ,EAAa2C,IACb3C,EAAakE,KACbpE,EAAWiE,MAcf,OACIoD,EAAAC,EAAAC,cAACmH,EAAA,SAAD,KACIrH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIyC,WAAS,EACTxC,QACIsH,EAAO,YAAcvP,EAAOA,OAAS,WAAa,OAEtDkH,QAlBQ,WAChBsI,GAAc,GAEVxP,EAAOA,SACP0P,EAAgB,CACZ1P,OAAQ+P,EAAoB/P,EAAOgD,MACnCuL,MAAOyB,EAAW3L,SAASrE,EAAOgD,QAEtC8M,GAAgB,KAWZjJ,UAAWP,EAAQX,WAElB3F,EAAOkD,SAEX2M,GACGnJ,EAAAC,EAAAC,cAACqJ,GAAD,CACI5B,KAAMwB,EACNvB,QAAS,kBAAMwB,GAAgB,IAC/B5I,QAASuI,EAAazP,OACtBuO,MAAOkB,EAAalB,UCpE3B2B,GAAc,WACvB,IAAM5J,EAAU0H,KACVpK,EAAS0B,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKkB,SAC3ChB,EAAe0C,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKE,eACjDuN,EAAoB7K,EACtB,SAAArF,GAAK,OAAIA,EAAMyC,KAAKG,OAAOC,WAAWC,UAEpCqN,EAAa9K,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKG,OAAOO,IAAIL,UAC1DsN,EAAe/K,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKG,OAAOU,MAAMR,UAC9D0B,EAAaY,EAAgB,SAAApF,GAAK,OAAIA,EAAMyC,KAAK+B,aACjDC,EAAiBW,EAAgB,SAAApF,GAAK,OAAIA,EAAMyC,KAAKgC,iBACrDV,EAAQsB,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKsB,QAC1CE,EAAYoB,EAAc,SAAArF,GAAK,OAAIA,EAAMyC,KAAKwB,YAChDnB,EAAU,KAkDd,OAhDqB,IAAjBH,EACAG,EAAUoN,EAAkBlM,OAAO,SAAAjE,GAC/B,OAAIA,EAAOgD,OAAS1D,EAAkB6D,gBAC3Ba,EAAMK,SAASzE,EAAe0Q,YAErCtQ,EAAOgD,OAAS1D,EAAkBsC,WAC3BoC,EAAMK,SAAS1E,EAAW4Q,eAIlC3M,IAAWxE,EAAgB0E,IAClCf,EAAUqN,EAAWnM,OAAO,SAAAjE,GACxB,OAAIA,EAAOgD,OAAS3D,EAAWkD,MACpByB,EAAMK,SAAS3E,EAAU6C,OAEhCvC,EAAOgD,OAAS3D,EAAWiD,OACpB0B,EAAMK,SAAS3E,EAAU4C,SAIjCsB,IAAWxE,EAAgB2E,QAClChB,EAAUsN,EAAapM,OAAO,SAAAjE,GAC1B,OAAIA,EAAOgD,OAASzD,EAAauC,YACtBkC,EAAMK,SAASzE,EAAekC,aAErC9B,EAAOgD,OAASzD,EAAayC,MACtBgC,EAAMK,SAASzE,EAAeoC,OAErChC,EAAOgD,OAASzD,EAAa0C,OACtB+B,EAAMK,SAAS3E,EAAUuC,QAEhCjC,EAAOgD,OAASzD,EAAaiC,OACtBwC,EAAMK,SAAS1E,EAAW6B,QAEjCxB,EAAOgD,OAASzD,EAAa2C,IACtB8B,EAAMK,SAAS3E,EAAUwC,KAEhClC,EAAOgD,OAASzD,EAAakE,KACtBO,EAAMK,SAAS3E,EAAU+D,MAEhCzD,EAAOgD,OAASzD,EAAaiE,YACtBU,EAAUG,SAAS5E,EAAUiO,UAQ5ChH,EAAAC,EAAAC,cAACmH,EAAA,SAAD,KACIrH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKnC,UAAWP,EAAQX,UAAWf,IAAKhB,GACnCb,GAAWA,EAAQpC,IAAI,SAAAX,GAAM,OAAI0G,EAAAC,EAAAC,cAAC4J,GAAD,CAAQxQ,OAAQA,OAEtD0G,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAazE,WAAS,GACjB7H,EAAe,GACZ8D,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACId,QAAS,kBAAMxC,KACfmC,UAAWP,EAAQkB,QAFvB,gBAOJd,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQd,QAAS,kBAAMzC,KAAcoC,UAAWP,EAAQkB,QAAxD,YCrFHiJ,GAAW,WACpB,IAAMnK,EAAUqH,KACVjI,EAAQwG,eAFYC,EAGAC,mBAAS,GAHTC,EAAAvL,OAAAwL,GAAA,EAAAxL,CAAAqL,EAAA,GAGnBrB,EAHmBuB,EAAA,GAGZE,EAHYF,EAAA,GAIpB3I,EAAU4B,EAAc,SAAAR,GAAK,OAAIA,EAAMpC,KAAKgB,UACrC4B,EAAc,SAAAR,GAAK,OAAIA,EAAMpC,KAAKiB,MAU/C,OACI+C,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC5BN,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACI1B,MAAOA,EACP3B,SAbhB,SAAsBsD,EAAYC,GAC9BH,EAASG,IAaGC,eAAe,UACfC,UAAU,UACV3E,QAAQ,aAERvB,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,MACNpK,QAAS,CAAEmE,UAAWnE,EAAQmE,aAElC/D,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,MACNrK,QAAS,CAAEmE,UAAWnE,EAAQmE,aAElC/D,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACIC,KAAMpG,EAAAC,EAAAC,cAACgK,GAAA,EAAD,MACNtK,QAAS,CAAEmE,UAAWnE,EAAQmE,eAI1C/D,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CACIwG,KAA0B,QAApBzH,EAAM0H,UAAsB,YAAc,IAChDC,MAAOvC,EACPwC,cA/BZ,SAA2BD,GACvBd,EAASc,IA+BDxG,UAAWP,EAAQN,SACnB6K,eAAgBvK,EAAQN,SACxB8K,eAAgB,CACZ9K,SAAU,EACVH,QAAS,SAGba,EAAAC,EAAAC,cAAA,OAAK2G,IAAK7H,EAAM0H,UAAWvG,UAAWP,EAAQN,UAA9C,sFAIAU,EAAAC,EAAAC,cAAA,OAAK2G,IAAK7H,EAAM0H,UAAWvG,UAAWP,EAAQN,UAC1CU,EAAAC,EAAAC,cAACmK,GAAD,OAEJrK,EAAAC,EAAAC,cAAA,OACI2G,IAAK7H,EAAM0H,UACXvG,UAAWP,EAAQsH,qBAElBlK,EAAQ/C,IAAI,SAAAC,GAAM,OACf8F,EAAAC,EAAAC,cAACoK,GAAD,CAAQpQ,OAAQA,UCtE3BqQ,GAAoBxL,YAAW,SAAAC,GAAK,MAAK,CAClD8B,OAAQ,CACJC,MAAO,OACPC,OAAQ,IACRC,aAAcjC,EAAMkC,QAAQ,IAEhCjC,UAAW,CACPkC,eAAgB,SAChBhC,QAAS,OACTC,cAAe,SACfE,SAAU,MCJLkL,GAAe,WACxB,IAAM5K,EAAU2K,KACV1K,EAASC,qBAAWC,KACpB/C,EAAU4B,EAAc,SAAAR,GAAK,OAAIA,EAAMlE,OAAOd,QAAOmE,OACvD,SAAArD,GAAM,OAAIA,EAAON,SAEf6Q,EAAe9L,EAAgB,SAAAtC,GAAO,OAAIA,EAAQL,KAAK8B,YACvD4M,EAAe9L,EAAc,SAAAR,GAAK,OAAIA,EAAMpC,KAAKC,gBAMvD,OACI+D,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQX,WACpBe,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,WACRjB,MAAM,UACNV,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBN,QAXM,WAClBiK,EAAa,CAAEzN,YACf6C,EAAOY,QAAQhH,KAAKe,EAAOmQ,QAKnB,8BAQA3K,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAQ,WACRjB,MAAM,UACNV,QAAS,CAAE4B,KAAM5B,EAAQkB,QACzBN,QAAS,kBAAMX,EAAOY,QAAQhH,KAAKe,EAAOmQ,OAC1ClG,UAAWiG,GALf,gBC1BHE,GAAiB,WAC1B,IAAM/K,EAASC,qBAAWC,KACpBzF,EAAaqE,EAAgB,SAAAtC,GAAO,OAAIA,EAAQnC,OAAOI,aACvDZ,EAAMmG,EAAOwF,MAAMC,OAA0B5L,GAC7CQ,EAAS0E,EAAc,SAAAR,GAAK,OAAIA,EAAMlE,OAAOd,QAAOmE,OACtD,SAAArD,GAAM,OAAIA,EAAOR,KAAOA,IAC1B,GAMF,OACIsG,EAAAC,EAAAC,cAACmB,EAAD,CAAY1B,eAAa,GACrBK,EAAAC,EAAAC,cAACyE,GAAD,CACIpB,aAAcrJ,EAAOL,KACrByJ,aARS,SAACsB,GAClBtK,EAAW,CAAEZ,GAAIA,EAAIG,KAAM+K,EAAO/K,OAClCgG,EAAOY,QAAQC,cCJVmK,GAAc,WACvB,OACI7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,KACI9K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,KACI/K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAO0Q,UAAWtI,UAAWxB,IAChDpB,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAOiH,QAASmB,UAAWF,KAC9C1C,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAOwI,WAAYJ,UAAW8B,KACjD1E,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAOkH,eAAgBkB,UAAWkC,KACrD9E,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAOmQ,KAAM/H,UAAWmH,KAC3C/J,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzQ,EAAOmH,UAAWiB,UAAW4H,KAChDxK,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,eAAgBrI,UAAWgI,KAC9C5K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CACIC,OAAK,EACLC,KAAM,yBACNrI,UAAW2C,4BCHhB4F,GAfO,WAClB,OACInL,EAAAC,EAAAC,cAACmH,EAAA,SAAD,KACIrH,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CAAaC,QAASrL,EAAAC,EAAAC,cAAA,sBAAoBzB,UAAWA,GACjDuB,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAelN,MAAOA,GAClB4B,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CAAW3I,UAAU,OAAO4I,SAAS,MACjCxL,EAAAC,EAAAC,cAACuL,EAAA,EAAD,MACAzL,EAAAC,EAAAC,cAACwL,GAAD,WCHJC,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzG,MACrB,2DCbZ0G,IAASpI,OAAO3D,EAAAC,EAAAC,cAAC8L,GAAD,MAASC,SAASC,eAAe,SDqIzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC","file":"static/js/main.1b337214.chunk.js","sourcesContent":["import { Action, Computed } from 'easy-peasy'\nimport { Player } from 'store/player/player.types'\n\nexport enum GamePeriodsType {\n    DAY = 'DAY',\n    NIGHT = 'NIGHT',\n}\n\nexport enum DayActions {\n    KILL = 'KILL',\n    MEET = 'MEET',\n    QUICK = 'QUICK',\n    CRAZY = 'CRAZY',\n}\n\nexport enum FirstNightActions {\n    PROSTITUTE_MEET = 'PROSTITUTE_MEET',\n    MAFIA_MEET = 'MAFIA_MEET',\n    BLACKMAIL = 'BLACKMAIL',\n}\n\nexport enum NightActions {\n    MAFIA_KILL = 'MAFIA_KILL',\n    POISON = 'POISON',\n    DEATH_ANGEL = 'DEATH_ANGEL',\n    DOCTOR = 'DOCTOR',\n    DEVIL = 'DEVIL',\n    SPY = 'SPY',\n    SPY2 = 'SPY2',\n}\n\nexport type Actions = FirstNightActions | DayActions | NightActions\n\nexport interface ActionConfig {\n    type: Actions\n    message: string\n    action: boolean\n}\nexport interface Config {\n    actions: Array<ActionConfig>\n}\n\nexport enum ModifiersTypes {\n    POISON = 'POISON',\n    DEATH = 'DEATH',\n    BLACKMAIL = 'BLACKMAIL',\n    DEATH_ANGEL = 'DEATH_ANGEL',\n    SPY = 'SPY',\n    DOCTOR = 'DOCTOR',\n    DEVIL = 'DEVIL',\n    CRAZY = 'CRAZY',\n    QUICK = 'QUICK',\n}\n\nexport interface Modifiers {\n    poison: number\n    death: boolean\n    blackmail: boolean\n    deathAngel: number\n    spy: string[]\n}\n\nexport interface GamePlayer {\n    playerId: string\n    name: string\n    fraction: string\n    role: string\n    modifiers: Modifiers\n}\n\nexport interface GameModel {\n    exisitingGame: boolean\n    period: Computed<GameModel, GamePeriodsType>\n    roles: Computed<GameModel, string[]>\n    fractions: Computed<GameModel, string[]>\n    periodNumber: number\n    config: {\n        firstNight: Config\n        day: Config\n        night: Config\n    }\n    players: GamePlayer[]\n    log: Array<{\n        period: GamePeriodsType\n        periodNumber: number\n        actions: string[]\n    }>\n    applyModifier: Action<\n        GameModel,\n        {\n            players: string[]\n            modifier: ModifiersTypes\n            spyInfo?: string\n            newRole?: string\n        }\n    >\n    startGame: Action<GameModel, { players: Player[] }>\n    nextPeriod: Action<GameModel>\n    previousPeriod: Action<GameModel>\n}\n","import { Action } from 'easy-peasy'\n\nexport enum Fractions {\n    TOWN = 'Miasto',\n    MAFIA = 'Mafia',\n    SYNDICATE = 'Syndyk',\n}\n\nexport enum TownRoles {\n    SPY = 'Szpieg',\n    SPY2 = 'Szpieg 2.0',\n    CRAZY = 'Szaleniec',\n    QUICK = 'Szybki',\n    DOCTOR = 'Doktor',\n    NONE = 'Zwykły Obywatel',\n}\n\nexport enum MafiaRoles {\n    BOSS = 'Boss',\n    BLACKMAILER = 'Szantażysta',\n    POISON = 'Truciciel',\n}\n\nexport enum SyndicateRoles {\n    DEVIL = 'Diabolica',\n    DEATH_ANGEL = 'Anioł Śmierci',\n    PROSTITUTE = 'Prostytuta',\n    SAINT = 'Święty',\n    NONE = 'szeregowy Syndykatu',\n}\n\nexport type Roles = TownRoles & MafiaRoles & SyndicateRoles\n\nexport interface PlayerModel {\n    items: Player[]\n    addPlayer: Action<PlayerModel, string>\n    assignToRole: Action<\n        PlayerModel,\n        { playerId: string; role: string; fraction: Fractions }\n    >\n    editPlayer: Action<PlayerModel, { id: string; name: string }>\n    changePlayerStatus: Action<PlayerModel, string>\n}\n\nexport interface Player {\n    id: string\n    name: string\n    active: boolean\n    role: string | null\n    fraction: Fractions | null\n}\n","import { PlayerModel, Player } from './player.types'\nimport { action } from 'easy-peasy'\nimport uuid from 'uuid/v4'\n\nexport const playerModel: PlayerModel = {\n    items: [],\n    addPlayer: action((state, payload) => {\n        state.items.push({\n            id: uuid(),\n            active: true,\n            name: payload,\n            fraction: null,\n            role: null,\n        })\n    }),\n    assignToRole: action((state, payload) => {\n        state.items = state.items.map<Player>(player => {\n            if (player.id === payload.playerId) {\n                return {\n                    ...player,\n                    fraction: payload.fraction,\n                    role: payload.role,\n                }\n            }\n\n            if (player.role === payload.role) {\n                return {\n                    ...player,\n                    fraction: null,\n                    role: null,\n                }\n            }\n            return player\n        })\n    }),\n    editPlayer: action((state, payload) => {\n        state.items = state.items.map(player => {\n            if (player.id === payload.id) {\n                return {\n                    ...player,\n                    name: payload.name,\n                }\n            }\n\n            return player\n        })\n    }),\n    changePlayerStatus: action((state, payload) => {\n        state.items = state.items.map(player => {\n            if (player.id === payload) {\n                return {\n                    ...player,\n                    active: !player.active,\n                }\n            }\n\n            return player\n        })\n    }),\n}\n","export enum Routes {\n    MAIN_MENU = '/',\n    PLAYERS = '/players',\n    ADD_PLAYER = '/players/new',\n    ASSIGN_PLAYERS = '/fractions/players',\n    GAME_MENU = '/game/menu/',\n    GAME = '/game',\n}\n","import {\n    GameModel,\n    GamePeriodsType,\n    FirstNightActions,\n    DayActions,\n    GamePlayer,\n    ModifiersTypes,\n    Modifiers,\n    NightActions,\n} from './game.types'\nimport { action, computed } from 'easy-peasy'\nimport { Fractions, TownRoles, SyndicateRoles } from 'store/player/player.types'\nimport { uniq } from 'lodash'\n\nconst mapNewModifiers = (\n    player: GamePlayer,\n    modifier: ModifiersTypes,\n    spyInfo?: string\n): Modifiers => {\n    const modifiers: { [key in ModifiersTypes]: Modifiers } = {\n        [ModifiersTypes.POISON]: {\n            ...player.modifiers,\n            poison: player.modifiers.poison + 1,\n            death: player.modifiers.poison ? true : false,\n        },\n        [ModifiersTypes.BLACKMAIL]: {\n            ...player.modifiers,\n            blackmail: true,\n        },\n        [ModifiersTypes.DEATH_ANGEL]: {\n            ...player.modifiers,\n            deathAngel: player.modifiers.deathAngel + 1,\n            death: player.modifiers.deathAngel ? true : false,\n        },\n        [ModifiersTypes.DEVIL]: {\n            ...player.modifiers,\n        },\n        [ModifiersTypes.DOCTOR]: {\n            ...player.modifiers,\n            poison: 0,\n            death: true,\n        },\n        [ModifiersTypes.SPY]: {\n            ...player.modifiers,\n            spy: spyInfo\n                ? [...player.modifiers.spy, spyInfo]\n                : player.modifiers.spy,\n        },\n        [ModifiersTypes.CRAZY]: {\n            ...player.modifiers,\n            death: true,\n        },\n        [ModifiersTypes.QUICK]: {\n            ...player.modifiers,\n            death: true,\n        },\n        [ModifiersTypes.DEATH]: {\n            ...player.modifiers,\n            death: true,\n        },\n    }\n\n    return modifiers[modifier]\n}\n\nexport const gameModel: GameModel = {\n    exisitingGame: false,\n    periodNumber: 0,\n    config: {\n        firstNight: {\n            actions: [\n                {\n                    type: FirstNightActions.MAFIA_MEET,\n                    message: 'Mafia się poznaje',\n                    action: false,\n                },\n                {\n                    type: FirstNightActions.BLACKMAIL,\n                    message: 'Szantażysta wybiera ofiarę',\n                    action: true,\n                },\n                {\n                    type: FirstNightActions.PROSTITUTE_MEET,\n                    message: 'Prostytutka omamia ofiarę, który wyjawi wszystko',\n                    action: false,\n                },\n            ],\n        },\n        day: {\n            actions: [\n                {\n                    type: DayActions.KILL,\n                    message: 'Miasto postanowiło zabić',\n                    action: true,\n                },\n                {\n                    type: DayActions.MEET,\n                    message: 'Miasto chce poznać mieszkańca',\n                    action: true,\n                },\n                {\n                    type: DayActions.CRAZY,\n                    message: 'Szaleniec postanowił zabić',\n                    action: true,\n                },\n                {\n                    type: DayActions.QUICK,\n                    message: 'Szybki nie chce dać się zabić',\n                    action: true,\n                },\n            ],\n        },\n        night: {\n            actions: [\n                {\n                    type: NightActions.MAFIA_KILL,\n                    message: 'Mafia zabija',\n                    action: true,\n                },\n                {\n                    type: NightActions.POISON,\n                    message: 'Truciel zatruwa osobę',\n                    action: true,\n                },\n                {\n                    type: NightActions.DEATH_ANGEL,\n                    message: 'Anioł śmierci naznacza',\n                    action: true,\n                },\n                {\n                    type: NightActions.DOCTOR,\n                    message: 'Lekarz leczy',\n                    action: true,\n                },\n                {\n                    type: NightActions.DEVIL,\n                    message: 'Diabolica rozpoczyna seans spirytystyczny',\n                    action: true,\n                },\n                {\n                    type: NightActions.SPY,\n                    message: 'Szpiego poznaje tożsamość gracza',\n                    action: true,\n                },\n                {\n                    type: NightActions.SPY2,\n                    message: 'Szpieg v2 poznaje tożsamość gracza',\n                    action: true,\n                },\n            ],\n        },\n    },\n    players: [],\n    log: [],\n    period: computed(state =>\n        !!(state.periodNumber % 2) ? GamePeriodsType.DAY : GamePeriodsType.NIGHT\n    ),\n    roles: computed(state =>\n        state.players\n            .filter(player => !player.modifiers.death)\n            .map(player => player.role)\n    ),\n    fractions: computed(state =>\n        uniq(\n            state.players\n                .filter(player => !player.modifiers.death)\n                .map(player => player.fraction)\n        )\n    ),\n    applyModifier: action((state, payload) => {\n        state.players = state.players.map<GamePlayer>(player => {\n            if (payload.players.includes(player.playerId)) {\n                return {\n                    ...player,\n                    role:\n                        payload.modifier === ModifiersTypes.DEVIL &&\n                        player.modifiers.death\n                            ? SyndicateRoles.NONE\n                            : player.role,\n                    fraction:\n                        payload.modifier === ModifiersTypes.DEVIL &&\n                        player.modifiers.death\n                            ? Fractions.SYNDICATE\n                            : player.fraction,\n                    modifiers: mapNewModifiers(\n                        player,\n                        payload.modifier,\n                        payload.spyInfo\n                    ),\n                }\n            }\n\n            if (\n                payload.modifier === ModifiersTypes.CRAZY &&\n                player.role === TownRoles.CRAZY\n            ) {\n                return {\n                    ...player,\n                    role: TownRoles.NONE,\n                }\n            }\n            if (\n                payload.modifier === ModifiersTypes.QUICK &&\n                player.role === TownRoles.QUICK\n            ) {\n                return {\n                    ...player,\n                    role: TownRoles.NONE,\n                }\n            }\n            return player\n        })\n    }),\n    startGame: action((state, payload) => {\n        state.exisitingGame = true\n        state.periodNumber = 0\n        state.players = payload.players.map<GamePlayer>(player => {\n            return {\n                playerId: player.id,\n                name: player.name,\n                role: player.role as string,\n                fraction: player.fraction as Fractions,\n                modifiers: {\n                    poison: 0,\n                    death: false,\n                    blackmail: false,\n                    deathAngel: 0,\n                    spy: [],\n                },\n            }\n        })\n    }),\n    nextPeriod: action(state => {\n        state.periodNumber = state.periodNumber + 1\n    }),\n    previousPeriod: action(state => {\n        state.periodNumber = state.periodNumber - 1\n    }),\n}\n","import { createStore } from 'easy-peasy'\nimport { StoreModel } from './store.types'\nimport { playerModel } from './player/player.model'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { gameModel } from './game/game.model'\n\nconst storeModel: StoreModel = {\n    player: playerModel,\n    game: gameModel,\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nexport const store = createStore(storeModel, {\n    reducerEnhancer: (reducer: any): any => {\n        return persistReducer(persistConfig, reducer)\n    },\n})\n\nexport const persistor = persistStore(store)\nexport const useStoreActions = store.useStoreActions\nexport const useStoreDispatch = store.useStoreDispatch\nexport const useStoreState = store.useStoreState\n","import { makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    childContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { useStyles } from './BaseLayout.styles'\nimport { AppBar } from '@material-ui/core'\nimport { BaseLayoutProps } from './BaseLayout.types'\nimport { ChevronLeft } from '@material-ui/icons'\nimport { __RouterContext } from 'react-router'\n\nexport const BaseLayout: FC<BaseLayoutProps> = ({\n    children,\n    displayAppBar = false,\n}) => {\n    const classes = useStyles()\n    const router = useContext(__RouterContext)\n\n    return (\n        <div className={classes.container}>\n            {displayAppBar && (\n                <AppBar position=\"static\" color=\"primary\">\n                    <ChevronLeft\n                        onClick={() => router.history.goBack()}\n                        style={{ fontSize: '2.5rem' }}\n                    />\n                </AppBar>\n            )}\n            <div className={classes.childContainer}>{children}</div>\n        </div>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useMenuStyles = makeStyles(theme => ({\n    button: {\n        width: '100%',\n        height: 100,\n        marginBottom: theme.spacing(2),\n    },\n    container: {\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { Button } from '@material-ui/core'\nimport { useMenuStyles } from './Menu.styles'\nimport { __RouterContext } from 'react-router'\nimport { Routes } from 'routing/routes'\n\nexport const Menu: FC = () => {\n    const classes = useMenuStyles()\n    const router = useContext(__RouterContext)\n\n    return (\n        <BaseLayout>\n            <div className={classes.container}>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ root: classes.button }}\n                    onClick={() => router.history.push(Routes.PLAYERS)}\n                >\n                    Gracze\n                </Button>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ root: classes.button }}\n                    onClick={() => router.history.push(Routes.ASSIGN_PLAYERS)}\n                >\n                    Przypisz role\n                </Button>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ root: classes.button }}\n                    onClick={() => router.history.push(Routes.GAME_MENU)}\n                >\n                    Zacznij gre\n                </Button>\n            </div>\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayersStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: 0,\n        overflowY: 'scroll',\n        flexGrow: 1,\n        '&::-webkit-scrollbar': {\n            width: '0 !important',\n        },\n    },\n    addContainer: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    legend: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}))\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayerStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    button: {\n        display: 'flex',\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { PlayerProps } from './player.types'\nimport { usePlayerStyles } from './player.styles'\nimport { Button, Switch, Box } from '@material-ui/core'\nimport { __RouterContext } from 'react-router'\nimport { useStoreActions } from 'store/store'\n\nexport const Player: FC<PlayerProps> = ({ player }) => {\n    const classes = usePlayerStyles()\n    const router = useContext(__RouterContext)\n    const changeStatus = useStoreActions(\n        actions => actions.player.changePlayerStatus\n    )\n\n    return (\n        <Box className={classes.container}>\n            <Button\n                classes={{ root: classes.button }}\n                variant=\"outlined\"\n                onClick={() => router.history.push(`/players/${player.id}`)}\n            >\n                {player.name}\n            </Button>\n            <Switch\n                checked={player.active}\n                onChange={() => changeStatus(player.id)}\n            />\n        </Box>\n    )\n}\n","import React, { FC, useContext } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { Fab, Typography } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport { usePlayersStyles } from './Players.styles'\nimport { __RouterContext } from 'react-router'\nimport { Routes } from 'routing/routes'\nimport { useStoreState } from 'store/store'\nimport { Player } from './Player/Player'\nimport { PlayersProps } from './Players.types'\n\nexport const Players: FC<PlayersProps> = () => {\n    const players = useStoreState(store => store.player.items)\n    const classes = usePlayersStyles()\n    const router = useContext(__RouterContext)\n\n    return (\n        <BaseLayout displayAppBar>\n            <div className={classes.legend}>\n                <Typography variant=\"h6\" component=\"h6\">\n                    Imie gracza\n                </Typography>\n                <Typography variant=\"h6\" component=\"h6\">\n                    Czy gra?\n                </Typography>\n            </div>\n            <div className={classes.container}>\n                {players.map(player => (\n                    <Player player={player} />\n                ))}\n            </div>\n            <div className={classes.addContainer}>\n                <Fab\n                    color=\"secondary\"\n                    aria-label=\"Add\"\n                    onClick={() => router.history.push(Routes.ADD_PLAYER)}\n                >\n                    <Add />\n                </Fab>\n            </div>\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayerFormStyles = makeStyles(theme => ({\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    buttonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n}))\n","import React, { FC } from 'react'\nimport { Form, Field } from 'react-final-form'\nimport { TextField } from 'final-form-material-ui'\nimport { Grid, Button } from '@material-ui/core'\nimport { PlayerFormProps } from './PlayerForm.types'\nimport { usePlayerFormStyles } from './PlayerForm.styles'\n\nexport const PlayerForm: FC<PlayerFormProps> = ({\n    handleSubmit,\n    initialValue,\n}) => {\n    const classes = usePlayerFormStyles()\n    return (\n        <Form<{ name: string }>\n            onSubmit={handleSubmit}\n            initialValues={{ name: initialValue }}\n            render={({ handleSubmit, submitting }) => (\n                <form\n                    onSubmit={handleSubmit}\n                    noValidate\n                    className={classes.container}\n                >\n                    <Field\n                        fullWidth\n                        required\n                        name=\"name\"\n                        component={TextField}\n                        type=\"text\"\n                        label=\"Imie gracza\"\n                        validate={value =>\n                            value.length > 0 ? undefined : 'Pole wymagane'\n                        }\n                    />\n\n                    <Grid\n                        item\n                        style={{ marginTop: 16 }}\n                        className={classes.buttonContainer}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={submitting}\n                        >\n                            {initialValue !== '' ? 'Zapisz' : 'Dodaj'}\n                        </Button>\n                    </Grid>\n                </form>\n            )}\n        />\n    )\n}\n","import React, { FC, useContext } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { useStoreActions } from 'store/store'\nimport { __RouterContext } from 'react-router'\nimport { PlayerForm } from '../PlayerForm/PlayerForm'\n\nexport const AddPlayer: FC = () => {\n    const router = useContext(__RouterContext)\n    const addPlayer = useStoreActions(actions => actions.player.addPlayer)\n\n    const handleSubmit = (values: { name: string }) => {\n        addPlayer(values.name)\n        router.history.goBack()\n    }\n    return (\n        <BaseLayout displayAppBar>\n            <PlayerForm initialValue=\"\" handleSubmit={handleSubmit} />\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayerStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { PlayerProps } from './player.types'\nimport { usePlayerStyles } from './player.styles'\nimport { Typography, Button } from '@material-ui/core'\nimport { __RouterContext } from 'react-router'\n\nexport const Player: FC<PlayerProps> = ({ player }) => {\n    const classes = usePlayerStyles()\n    const router = useContext(__RouterContext)\n\n    return (\n        <Button\n            classes={{ root: classes.container }}\n            onClick={() =>\n                router.history.push(`/fractions/players/${player.id}`)\n            }\n            variant=\"outlined\"\n            fullWidth\n        >\n            <Typography variant=\"h6\" component=\"h6\">\n                {player.name}\n            </Typography>\n            {player.role && (\n                <Typography variant=\"h6\" component=\"h6\">\n                    ({player.role})\n                </Typography>\n            )}\n        </Button>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useAssignStyles = makeStyles(theme => ({\n    container: {\n        marginTop: theme.spacing(3),\n    },\n}))\n","import React, { FC } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { useStoreState } from 'store/store'\nimport { Player } from './Player/Player'\nimport { useAssignStyles } from './Assign.styles'\n\nexport const Assign: FC = () => {\n    const players = useStoreState(store => store.player.items).filter(\n        player => player.active\n    )\n    const classes = useAssignStyles()\n\n    return (\n        <BaseLayout displayAppBar>\n            <div className={classes.container}>\n                {players.map(player => (\n                    <Player player={player} />\n                ))}\n            </div>\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useFractionStyles = makeStyles(theme => ({\n    fullWidth: {\n        minWidth: 'unset',\n    },\n}))\n","import { makeStyles } from '@material-ui/core'\n\nexport const useRoleStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { Button, Typography } from '@material-ui/core'\nimport { __RouterContext } from 'react-router'\nimport { useRoleStyles } from './Role.styles'\nimport { RoleProps } from './Role.types'\nimport { useStoreActions } from 'store/store'\n\nexport const Role: FC<RoleProps> = ({ role, fraction }) => {\n    const classes = useRoleStyles()\n    const router = useContext(__RouterContext)\n\n    const addRole = useStoreActions(actions => actions.player.assignToRole)\n\n    const id = (router.match.params as { id: string }).id\n\n    const handleClick = () => {\n        id &&\n            addRole({\n                role: role,\n                playerId: id,\n                fraction: fraction,\n            })\n\n        router.history.goBack()\n    }\n\n    return (\n        <Button\n            classes={{ root: classes.container }}\n            onClick={handleClick}\n            variant=\"outlined\"\n            fullWidth\n        >\n            <Typography variant=\"h5\" component=\"h3\">\n                {role}\n            </Typography>\n        </Button>\n    )\n}\n","import React, { FC, useState } from 'react'\nimport SwipeableViews from 'react-swipeable-views'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { AppBar, Tabs, Tab, useTheme } from '@material-ui/core'\nimport { Phone, LocationCity, Brightness3 } from '@material-ui/icons'\nimport { useFractionStyles } from './Fraction.styles'\nimport {\n    TownRoles,\n    MafiaRoles,\n    SyndicateRoles,\n} from 'store/player/player.types'\nimport { Role } from './Role/Role'\nimport { Fractions } from 'store/player/player.types'\n\nexport const Fraction: FC = () => {\n    const classes = useFractionStyles()\n    const theme = useTheme()\n    const [value, setValue] = useState(0)\n\n    function handleChange(event: any, newValue: number) {\n        setValue(newValue)\n    }\n\n    function handleChangeIndex(index: number) {\n        setValue(index)\n    }\n\n    return (\n        <BaseLayout displayAppBar>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    <Tab\n                        icon={<LocationCity />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                    <Tab\n                        icon={<Brightness3 />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                    <Tab\n                        icon={<Phone />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <div dir={theme.direction}>\n                    {Object.values(TownRoles).map((role: string) => (\n                        <Role role={role} fraction={Fractions.TOWN} />\n                    ))}\n                </div>\n                <div dir={theme.direction}>\n                    {Object.values(MafiaRoles).map((role: string) => (\n                        <Role role={role} fraction={Fractions.MAFIA} />\n                    ))}\n                </div>\n                <div dir={theme.direction}>\n                    {Object.values(SyndicateRoles).map((role: string) => (\n                        <Role role={role} fraction={Fractions.SYNDICATE} />\n                    ))}\n                </div>\n            </SwipeableViews>\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useGameStyles = makeStyles(theme => ({\n    fullWidth: {\n        minWidth: 'unset',\n    },\n    flexGrow: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n    scrollableContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: 0,\n        overflowY: 'scroll',\n        flexGrow: 1,\n        '&::-webkit-scrollbar': {\n            width: '0 !important',\n        },\n    },\n}))\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayerStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    info: {\n        display: 'flex',\n    },\n    infoElem: {\n        padding: theme.spacing(2),\n    },\n}))\n","import React, { FC, Fragment } from 'react'\nimport { PlayerProps } from './player.types'\nimport { usePlayerStyles } from './player.styles'\nimport { Typography, Button } from '@material-ui/core'\n\nexport const Player: FC<PlayerProps> = ({ player }) => {\n    const classes = usePlayerStyles()\n    const modifiers = player.modifiers\n    return (\n        <Fragment>\n            <Button\n                classes={{ root: classes.container }}\n                disabled={player.modifiers.death}\n            >\n                <Typography variant=\"h6\" component=\"h6\">\n                    {player.name}\n                </Typography>\n                <Typography variant=\"h6\" component=\"h6\">\n                    ({player.role})\n                </Typography>\n            </Button>\n            <div className={classes.info}>\n                <Typography\n                    variant=\"h6\"\n                    component=\"h6\"\n                    className={classes.infoElem}\n                >\n                    T: {modifiers.poison}\n                </Typography>\n                <Typography\n                    variant=\"h6\"\n                    component=\"h6\"\n                    className={classes.infoElem}\n                >\n                    A: {modifiers.deathAngel}\n                </Typography>\n                {modifiers.blackmail && (\n                    <Typography\n                        variant=\"h6\"\n                        component=\"h6\"\n                        className={classes.infoElem}\n                    >\n                        Szantażowany\n                    </Typography>\n                )}\n            </div>\n        </Fragment>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useActionStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n    button: {\n        padding: theme.spacing(2),\n    },\n}))\n","import { makeStyles } from '@material-ui/core'\n\nexport const usePlayersDialogStyles = makeStyles(theme => ({\n    button: {\n        padding: theme.spacing(2),\n    },\n}))\n","import React, { FC, useState, Fragment } from 'react'\nimport {\n    Dialog,\n    Button,\n    DialogActions,\n    DialogContent,\n    Typography,\n    ButtonGroup,\n} from '@material-ui/core'\nimport { PlayersDialogProps } from './PlayersDialog.types'\nimport { useStoreState } from 'store/store'\nimport { GamePlayer } from 'store/game/game.types'\nimport { Fractions } from 'store/player/player.types'\nimport { usePlayersDialogStyles } from './PlayersDialog.styles'\n\nconst mapFractionsToInfo: { [key in string]: string } = {\n    [Fractions.MAFIA]: 'Nie z mafii',\n    [Fractions.SYNDICATE]: 'Nie z syndyku',\n    [Fractions.TOWN]: 'Nie z miasta',\n}\n\nexport const PlayersDialog: FC<PlayersDialogProps> = ({\n    open,\n    onClose,\n    onClick,\n    isSpy,\n}) => {\n    const [selectedPlayersIds, setSelectedPlayers] = useState<string[]>([])\n    const [spyInfo, setSpyInfo] = useState<GamePlayer | null>(null)\n    const players = useStoreState(store => store.game.players)\n    const classes = usePlayersDialogStyles()\n\n    const handleClick = (player: GamePlayer) => {\n        if (isSpy) {\n            setSpyInfo(player)\n        } else {\n            if (selectedPlayersIds.includes(player.playerId)) {\n                setSelectedPlayers(\n                    selectedPlayersIds.filter(\n                        playerId => playerId !== player.playerId\n                    )\n                )\n            } else {\n                setSelectedPlayers([...selectedPlayersIds, player.playerId])\n            }\n        }\n    }\n\n    const handleSave = () => {\n        onClick(selectedPlayersIds, '')\n        onClose()\n    }\n\n    const handleSpySave = (playerId: string, spy: string) => {\n        onClick([playerId], spy)\n        onClose()\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose}>\n            <DialogContent>\n                {!!!spyInfo ? (\n                    players.map(player => (\n                        <Button\n                            fullWidth\n                            variant={\n                                selectedPlayersIds.includes(player.playerId)\n                                    ? 'contained'\n                                    : 'outlined'\n                            }\n                            onClick={() => handleClick(player)}\n                            key={player.playerId}\n                            className={classes.button}\n                        >\n                            {player.name}\n                        </Button>\n                    ))\n                ) : (\n                    <Fragment>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            {spyInfo!.name} {spyInfo!.fraction}\n                        </Typography>\n                        {spyInfo!.modifiers.spy.length === 0 && (\n                            <Typography variant=\"h5\" component=\"h3\">\n                                O tym graczu nie była jeszcze sprawdzona\n                                informacja\n                            </Typography>\n                        )}\n                        {spyInfo!.modifiers.spy.map(spy => (\n                            <Typography variant=\"h5\" component=\"h3\">\n                                {mapFractionsToInfo[spy]}\n                            </Typography>\n                        ))}\n                        <ButtonGroup fullWidth>\n                            {Object.values(Fractions)\n                                .filter(\n                                    fraction => fraction !== spyInfo!.fraction\n                                )\n                                .map(fraction => (\n                                    <Button\n                                        onClick={() =>\n                                            handleSpySave(\n                                                spyInfo!.playerId,\n                                                fraction\n                                            )\n                                        }\n                                    >\n                                        {mapFractionsToInfo[fraction]}\n                                    </Button>\n                                ))}\n                        </ButtonGroup>\n                    </Fragment>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={!!spyInfo ? () => setSpyInfo(null) : onClose}\n                    color=\"primary\"\n                    className={classes.button}\n                >\n                    Anuluj\n                </Button>\n                {!isSpy && (\n                    <Button\n                        onClick={() => handleSave()}\n                        color=\"primary\"\n                        disabled={selectedPlayersIds.length === 0}\n                        className={classes.button}\n                    >\n                        Zatwierdź zmainy dla graczy\n                    </Button>\n                )}\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useActionStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n    },\n}))\n","import React, { FC, useState, Fragment } from 'react'\nimport { Button } from '@material-ui/core'\nimport { ActionProps } from './Action.types'\nimport { PlayersDialog } from '../PlayersDialog/PlayersDialog'\nimport { useStoreActions } from 'store/store'\nimport {\n    DayActions,\n    ModifiersTypes,\n    NightActions,\n    FirstNightActions,\n} from 'store/game/game.types'\nimport { useActionStyles } from './Action.styles'\n\nexport const Action: FC<ActionProps> = ({ action }) => {\n    const [done, setDoneStatus] = useState(false)\n    const [playerAction, setPlayerAction] = useState<{\n        action: (players: string[], spyInfo: string) => void\n        isSpy: boolean\n    }>({ action: () => {}, isSpy: false })\n    const [isPlayersDialogOpen, setPlayerDialog] = useState(false)\n    const applyModifier = useStoreActions(actions => actions.game.applyModifier)\n    const classes = useActionStyles()\n\n    const mapActionsToModifer: {\n        [key in string]: (players: string[], spyInfo: string) => void\n    } = {\n        [DayActions.KILL]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.DEATH }),\n        [DayActions.MEET]: (players: string[], spyInfo: string) =>\n            applyModifier({ players, modifier: ModifiersTypes.SPY, spyInfo }),\n        [DayActions.CRAZY]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.CRAZY }),\n        [DayActions.QUICK]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.QUICK }),\n        [NightActions.MAFIA_KILL]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.DEATH }),\n        [NightActions.DEATH_ANGEL]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.DEATH_ANGEL }),\n        [NightActions.DEVIL]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.DEVIL }),\n        [NightActions.DOCTOR]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.DOCTOR }),\n        [NightActions.POISON]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.POISON }),\n        [NightActions.SPY]: (players: string[], spyInfo: string) =>\n            applyModifier({ players, modifier: ModifiersTypes.SPY, spyInfo }),\n        [NightActions.SPY2]: (players: string[], spyInfo: string) =>\n            applyModifier({ players, modifier: ModifiersTypes.SPY, spyInfo }),\n        [FirstNightActions.BLACKMAIL]: (players: string[]) =>\n            applyModifier({ players, modifier: ModifiersTypes.BLACKMAIL }),\n    }\n\n    const spyActions: string[] = [\n        NightActions.SPY,\n        NightActions.SPY2,\n        DayActions.MEET,\n    ]\n\n    const handleClick = () => {\n        setDoneStatus(true)\n\n        if (action.action) {\n            setPlayerAction({\n                action: mapActionsToModifer[action.type],\n                isSpy: spyActions.includes(action.type),\n            })\n            setPlayerDialog(true)\n        }\n    }\n    return (\n        <Fragment>\n            <Button\n                fullWidth\n                variant={\n                    done ? 'contained' : action.action ? 'outlined' : 'text'\n                }\n                onClick={handleClick}\n                className={classes.container}\n            >\n                {action.message}\n            </Button>\n            {isPlayersDialogOpen && (\n                <PlayersDialog\n                    open={isPlayersDialogOpen}\n                    onClose={() => setPlayerDialog(false)}\n                    onClick={playerAction.action}\n                    isSpy={playerAction.isSpy}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { FC, Fragment } from 'react'\nimport { Button, Box, ButtonGroup } from '@material-ui/core'\nimport { useActionStyles } from './Actions.styles'\nimport { useStoreState, useStoreActions } from 'store/store'\nimport {\n    GamePeriodsType,\n    DayActions,\n    FirstNightActions,\n    NightActions,\n} from 'store/game/game.types'\nimport { Action } from './Action/Action'\nimport {\n    TownRoles,\n    SyndicateRoles,\n    MafiaRoles,\n    Fractions,\n} from 'store/player/player.types'\n\nexport const Actions: FC = () => {\n    const classes = useActionStyles()\n    const period = useStoreState(state => state.game.period)\n    const periodNumber = useStoreState(state => state.game.periodNumber)\n    const firstNightActions = useStoreState(\n        state => state.game.config.firstNight.actions\n    )\n    const dayActions = useStoreState(state => state.game.config.day.actions)\n    const nightActions = useStoreState(state => state.game.config.night.actions)\n    const nextPeriod = useStoreActions(state => state.game.nextPeriod)\n    const previousPeriod = useStoreActions(state => state.game.previousPeriod)\n    const roles = useStoreState(state => state.game.roles)\n    const fractions = useStoreState(state => state.game.fractions)\n    let actions = null\n\n    if (periodNumber === 0) {\n        actions = firstNightActions.filter(action => {\n            if (action.type === FirstNightActions.PROSTITUTE_MEET) {\n                return roles.includes(SyndicateRoles.PROSTITUTE)\n            }\n            if (action.type === FirstNightActions.BLACKMAIL) {\n                return roles.includes(MafiaRoles.BLACKMAILER)\n            }\n            return true\n        })\n    } else if (period === GamePeriodsType.DAY) {\n        actions = dayActions.filter(action => {\n            if (action.type === DayActions.QUICK) {\n                return roles.includes(TownRoles.QUICK)\n            }\n            if (action.type === DayActions.CRAZY) {\n                return roles.includes(TownRoles.CRAZY)\n            }\n            return true\n        })\n    } else if (period === GamePeriodsType.NIGHT) {\n        actions = nightActions.filter(action => {\n            if (action.type === NightActions.DEATH_ANGEL) {\n                return roles.includes(SyndicateRoles.DEATH_ANGEL)\n            }\n            if (action.type === NightActions.DEVIL) {\n                return roles.includes(SyndicateRoles.DEVIL)\n            }\n            if (action.type === NightActions.DOCTOR) {\n                return roles.includes(TownRoles.DOCTOR)\n            }\n            if (action.type === NightActions.POISON) {\n                return roles.includes(MafiaRoles.POISON)\n            }\n            if (action.type === NightActions.SPY) {\n                return roles.includes(TownRoles.SPY)\n            }\n            if (action.type === NightActions.SPY2) {\n                return roles.includes(TownRoles.SPY2)\n            }\n            if (action.type === NightActions.MAFIA_KILL) {\n                return fractions.includes(Fractions.MAFIA)\n            }\n\n            return true\n        })\n    }\n\n    return (\n        <Fragment>\n            <Box className={classes.container} key={period}>\n                {actions && actions.map(action => <Action action={action} />)}\n            </Box>\n            <ButtonGroup fullWidth>\n                {periodNumber > 0 && (\n                    <Button\n                        onClick={() => previousPeriod()}\n                        className={classes.button}\n                    >\n                        Wróć\n                    </Button>\n                )}\n                <Button onClick={() => nextPeriod()} className={classes.button}>\n                    Dalej\n                </Button>\n            </ButtonGroup>\n        </Fragment>\n    )\n}\n","import React, { FC, useState } from 'react'\nimport SwipeableViews from 'react-swipeable-views'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { AppBar, Tabs, Tab, useTheme } from '@material-ui/core'\nimport { Notes, Person, ViewList } from '@material-ui/icons'\nimport { useGameStyles } from './Game.styles'\nimport { useStoreState } from 'store/store'\nimport { Player } from './Player/Player'\nimport { Actions } from './Actions/Actions'\n\nexport const Game: FC = () => {\n    const classes = useGameStyles()\n    const theme = useTheme()\n    const [value, setValue] = useState(1)\n    const players = useStoreState(store => store.game.players)\n    const logs = useStoreState(store => store.game.log)\n\n    function handleChange(event: any, newValue: number) {\n        setValue(newValue)\n    }\n\n    function handleChangeIndex(index: number) {\n        setValue(index)\n    }\n\n    return (\n        <BaseLayout displayAppBar>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    <Tab\n                        icon={<Notes />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                    <Tab\n                        icon={<ViewList />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                    <Tab\n                        icon={<Person />}\n                        classes={{ fullWidth: classes.fullWidth }}\n                    />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n                className={classes.flexGrow}\n                slideClassName={classes.flexGrow}\n                containerStyle={{\n                    flexGrow: 1,\n                    display: 'flex',\n                }}\n            >\n                <div dir={theme.direction} className={classes.flexGrow}>\n                    Informacje o tym co działo się poprzednio zostaną dodane\n                    wkrótce\n                </div>\n                <div dir={theme.direction} className={classes.flexGrow}>\n                    <Actions />\n                </div>\n                <div\n                    dir={theme.direction}\n                    className={classes.scrollableContainer}\n                >\n                    {players.map(player => (\n                        <Player player={player} />\n                    ))}\n                </div>\n            </SwipeableViews>\n        </BaseLayout>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useGameMenuStyles = makeStyles(theme => ({\n    button: {\n        width: '100%',\n        height: 100,\n        marginBottom: theme.spacing(2),\n    },\n    container: {\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n}))\n","import React, { FC, useContext } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { Button } from '@material-ui/core'\nimport { useGameMenuStyles } from './GameMenu.styles'\nimport { __RouterContext } from 'react-router'\nimport { Routes } from 'routing/routes'\nimport { useStoreState, useStoreActions } from 'store/store'\n\nexport const GameMenu: FC = () => {\n    const classes = useGameMenuStyles()\n    const router = useContext(__RouterContext)\n    const players = useStoreState(store => store.player.items).filter(\n        player => player.active\n    )\n    const startNewGame = useStoreActions(actions => actions.game.startGame)\n    const existingGame = useStoreState(store => store.game.exisitingGame)\n\n    const handleNewGame = () => {\n        startNewGame({ players })\n        router.history.push(Routes.GAME)\n    }\n    return (\n        <BaseLayout displayAppBar>\n            <div className={classes.container}>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ root: classes.button }}\n                    onClick={handleNewGame}\n                >\n                    Zacznij nową grę\n                </Button>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    classes={{ root: classes.button }}\n                    onClick={() => router.history.push(Routes.GAME)}\n                    disabled={!existingGame}\n                >\n                    Kontynuuj\n                </Button>\n            </div>\n        </BaseLayout>\n    )\n}\n","import React, { FC, useContext } from 'react'\nimport { BaseLayout } from 'shared/BaseLayout/BaseLayout'\nimport { useStoreActions, useStoreState } from 'store/store'\nimport { __RouterContext } from 'react-router'\nimport { PlayerForm } from '../PlayerForm/PlayerForm'\n\nexport const EditPlayer: FC = () => {\n    const router = useContext(__RouterContext)\n    const editPlayer = useStoreActions(actions => actions.player.editPlayer)\n    const id = (router.match.params as { id: string }).id\n    const player = useStoreState(store => store.player.items).filter(\n        player => player.id === id\n    )[0]\n\n    const handleSubmit = (values: { name: string }) => {\n        editPlayer({ id: id, name: values.name })\n        router.history.goBack()\n    }\n    return (\n        <BaseLayout displayAppBar>\n            <PlayerForm\n                initialValue={player.name}\n                handleSubmit={handleSubmit}\n            />\n        </BaseLayout>\n    )\n}\n","import React, { FC } from 'react'\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\nimport { Menu } from 'views/Menu/Menu'\nimport { Players } from 'views/Players/Players'\nimport { Routes } from './routes'\nimport { AddPlayer } from 'views/Players/AddPlayer/AddPlayer'\nimport { Assign } from 'views/Assign/Assign'\nimport { Fraction } from 'views/Assign/Fraction/Fraction'\nimport { Game } from 'views/Game/Game/Game'\nimport { GameMenu } from 'views/Game/GameMenu/GameMenu'\nimport { EditPlayer } from 'views/Players/EditPlayer/EditPlayer'\n\nexport const Routing: FC = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={Routes.MAIN_MENU} component={Menu} />\n                <Route exact path={Routes.PLAYERS} component={Players} />\n                <Route exact path={Routes.ADD_PLAYER} component={AddPlayer} />\n                <Route exact path={Routes.ASSIGN_PLAYERS} component={Assign} />\n                <Route exact path={Routes.GAME} component={Game} />\n                <Route exact path={Routes.GAME_MENU} component={GameMenu} />\n                <Route exact path={'/players/:id'} component={EditPlayer} />\n                <Route\n                    exact\n                    path={'/fractions/players/:id'}\n                    component={Fraction}\n                />\n            </Switch>\n        </Router>\n    )\n}\n","import React, { Fragment } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { StoreProvider } from 'easy-peasy'\nimport { store, persistor } from './store/store'\nimport { Routing } from 'routing/Routing'\nimport { Container } from '@material-ui/core'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst App: React.FC = () => {\n    return (\n        <Fragment>\n            <PersistGate loading={<div>Loading</div>} persistor={persistor}>\n                <StoreProvider store={store}>\n                    <Container component=\"main\" maxWidth=\"xs\">\n                        <CssBaseline />\n                        <Routing />\n                    </Container>\n                </StoreProvider>\n            </PersistGate>\n        </Fragment>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}